
import cv2
import numpy as np


def region_of_intrest(img,vertices):
    mask=np.zeros_like(img)
#becuse we are useing gray scale image  we dont need channel
#    channel_count=img.shape[2]
    match_mask=255
    cv2.fillPoly(mask,vertices,match_mask)
    mask_img=cv2.bitwise_and(img,mask)
    return mask_img

def draw_line(img,lines):
    img=np.copy(img)
    blank_img=np.zeros((img.shape[0],img.shape[1],3),dtype=np.uint8)

    for i in lines:
        for x1,y1,x2,y2 in i:
            cv2.line(blank_img,(x1,y1),(x2,y2),(0,255,0),8)
    img=cv2.addWeighted(img,0.8,blank_img,1,0.0)
    return img


#img=cv2.imread("car.png")
#img=cv2.resize(img,(1250,700))
#img=cv2.cvtColor(img,cv2.COLOR_BGR2RGB)

def process(img):

    height=img.shape[0]
    width=img.shape[1]
    region_of_intrest_point=[(0,height),(width/2,height/2)
        ,(width,height)]

    imgray=cv2.cvtColor(img,cv2.COLOR_RGB2GRAY)
    imgcanny=cv2.Canny(imgray,102,120)
    crop=region_of_intrest(imgcanny,np.array([region_of_intrest_point],np.int32),)

    lines=cv2.HoughLinesP(crop,rho=2,theta=np.pi/60,
                          threshold=160,lines=np.array([]),
                          minLineLength=60,maxLineGap=100)
    img_lines=draw_line(img,lines)
    return img_lines

cap=cv2.VideoCapture("test.mp4")

while True:
    ret,img=cap.read()
    img=process(img)
    cv2.imshow("frame",img)
    if cv2.waitKey(1) & 0xFF == ord("q"):
        break

cap.release()
cv2.destroyAllWindows()
